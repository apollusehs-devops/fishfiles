#!/usr/bin/env bash
# Fancy dockertool
reset="\033[0m"
bold="\033[1m"
mute="\033[36m"
alt="\033[32m"

list() {
  local output="$(docker ps --format '{{ .ID }}')"
  local index=0

  echo "$output" | while read id; do
    # $id = 18489957c599
    index=$(( index + 1 ))

    local shortid="${id:0:6}"

    # /devhints-engine_web_1
    local name="$(docker inspect "$id" --format '{{ .Name }}')"

    # ruby:2.5.0
    local image="$(docker inspect "$id" --format '{{ .Config.Image }}')"

    # 19336/tcp
    local ports="$(docker inspect "$id" --format '{{ range $key, $value := .Config.ExposedPorts }}{{ $key }}{{ end }}' | sed 's#/tcp##g')"

    if [[ -n "$ports" ]]; then
      ports="[:$ports]"
    fi

    # Print
    # printf "    ${mute}%i${reset}  ${bold}%-30s${reset} ${mute}%s${reset}\n" "$index" "$image" "$ip:$port"
    # printf "    ${bold}%s${reset}  ${mute}%s${reset} ${bold}%-30s${reset} ${mute}%s${reset}\n" "$index" "${id:0:6}" "$image $name" "$ports"
    echo ""
    printf "${mute}%s${reset}  ${alt}(%s)${reset}  ${bold}%-35s${reset}  ${alt}%20s${reset}  ${mute}%s${reset}\n" "$shortid" "$index" "$image" "$ports"
    printf "%12s ${mute}%s${reset}\n" "" "${name:1:99}"
  done
}

run() {
  case "$1" in
    ps)
      list
      ;;

    *)
      help
      ;;
  esac
}

help() {
  echo "Usage: dockertool <action>"
  echo ""
  echo "Actions:"
  echo "  ps    show available containers"
  echo ""
}

run "$@"
