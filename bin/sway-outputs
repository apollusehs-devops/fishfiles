#!/usr/bin/env bash
# Simple swaywm output management tool
set -eou pipefail

check_dependencies() {
  if ! command -v swaymsg &>/dev/null; then
    echo "No sway found"
    exit 1
  fi

  if ! command -v jq &>/dev/null; then
    echo "No jq found"
    exit 1
  fi
}

get_outputs() {
  swaymsg -t get_outputs \
    | jq -r '.[] | [.name, .active, .rect.x, .rect.y, .rect.width, .rect.height, .focused] | @sh'
}

get_unfocused_outputs() {
  swaymsg -t get_outputs \
    | jq -r '.[] | select(.focused != true and .active == true) | .name'
}

get_inactive_outputs() {
  swaymsg -t get_outputs \
    | jq -r '.[] | select(.active != true) | .name'
}

_msg() {
  echo -e "\033[37m$ swaymsg $@\033[0m\n"
  swaymsg "$@"
}

list_outputs() {
  local output m name active x y width height focused
  get_outputs | while read output; do
    eval "m=($output)"
    name="${m[0]}"
    active="${m[1]}"
    x="${m[2]}"
    y="${m[3]}"
    width="${m[4]}"
    height="${m[5]}"
    focused="${m[6]}"
    if [[ "$active" == "true" ]]; then
      label_primary="$(if [ "${x}x${y}" == "0x0" ]; then echo 'primary '; else echo ' '; fi)"
      label_focus="$(if [ "$focused" == "true" ]; then echo '*'; else echo ' '; fi)"
      printf "  %-1s \033[1m%-15s\033[0m %-10s \033[31m%s\033[0m\n" "$label_focus" "$name" "${width}x${height}" "$label_primary"
    else
      printf "  %-1s %-15s %-10s \033[33m%s\033[0m\n" "" "$name" "-" "off"
    fi
  done
}

help() {
  echo "Commands:"
  echo "  list      list displays"
  echo "  single    turn off other displays [alias: s]"
  echo "  switch    switch to the other display [alias: x]"
  echo "  multi     turn on all displays [alias: m]"
}

single_mode() {
  local output
  get_unfocused_outputs | while read output; do
    _msg output "$output" disable
  done
}

multi_mode() {
  local output
  get_inactive_outputs | while read output; do
    _msg output "$output" enable
  done
}

main() {
  case "${1:-}" in
    h | help | -h | --help)
      help
      ;;
    s | single)
      check_dependencies
      single_mode
      list_outputs
      ;;
    m | multi_mode)
      check_dependencies
      multi_mode
      list_outputs
      ;;
    *)
      check_dependencies
      list_outputs
      ;;
  esac
}

main "$@"
